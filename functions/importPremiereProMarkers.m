function markers = importPremiereProMarkers(filename, fps, dataLines)
%IMPORTFILE Import data from a text file
%  MARKERS = IMPORTFILE(FILENAME) reads data from text file FILENAME for
%  the default selection.  Returns the data as a table.
%
%  MARKERS = IMPORTFILE(FILE, DATALINES) reads data for the specified
%  row interval(s) of text file FILENAME. Specify DATALINES as a
%  positive scalar integer or a N-by-2 array of positive scalar integers
%  for dis-contiguous row intervals.
%
%  Example:
%  markers = importPremiereProMarkers('D:\Trevor\My Documents\MED lab\Cochlear R01\Mag Steering\Experiments\RAL\phantom_manual_trial3_ea1\phantom-manual-trial3-markers.csv', 60, [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 07-Sep-2019 14:20:00

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 3
    dataLines = [2, Inf];
end

%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 6);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["MarkerName", "Description", "In", "Out", "Duration", "MarkerType"];
opts.VariableTypes = ["double", "string", "string", "string", "string", "string"];
opts = setvaropts(opts, [2, 3, 4, 5, 6], "WhitespaceRule", "preserve");
opts = setvaropts(opts, [2, 3, 4, 5, 6], "EmptyFieldRule", "auto");
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Setup rules for import
opts.ImportErrorRule = "omitrow";
opts.MissingRule = "omitrow";

% Import the data
markers = readtable(filename, opts);

% TLB: convert timestamps from strings to doubles ('Hours:Minutes:Seconds:Frame#' to seconds)
markers.In  = timestamp2seconds(markers.In, fps);
markers.Out = timestamp2seconds(markers.Out, fps);
markers.Duration = timestamp2seconds(markers.Duration, fps);



function seconds = timestamp2seconds(timestamp_str, fps)
    conversion = [3600, 60, 1, 1/fps]; % [s] conversion factors
    seconds = zeros(size(timestamp_str));
    for ii=1:length(timestamp_str)
        timestamp = strsplit(timestamp_str(ii), ':'); % split string
        vals = str2double(timestamp); % convert to array of doubles
        seconds(ii) = dot(vals, conversion);
    end
end
end